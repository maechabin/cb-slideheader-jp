{"version":3,"sources":["app.model.ts","app.ts"],"names":[],"mappings":"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","file":"slideheader.map","sourceRoot":"../src","sourcesContent":["export namespace SlideHeaderModel {\n  export enum SLIDE_TYPE {\n    UP = 'Up',\n    DOWN = 'Down',\n  }\n\n  export enum METHOD_TYPE {\n    SLIDE_DOWN = 'slideDown',\n    SLIDE_UP = 'slideUp',\n  }\n\n  export enum SLIDE_TIMING {\n    EASE = 'ease',\n    LINEAR = 'linear',\n    EASE_IN = 'ease-in',\n    EASE_OUT = 'ease-out',\n    EASE_IN_OUT = 'ease-in-out',\n  }\n\n  export interface Option {\n    headerBarHeight?: number;\n    headerBarWidth?: string;\n    header2SelectorName?: string;\n    zIndex?: number;\n    boxShadow?: string;\n    opacity?: number;\n    slidePoint?: number;\n    slideDownDuration: string;\n    slideUpDuration: string;\n    slideDownTiming?: SLIDE_TIMING | string;\n    slideUpTiming?: SLIDE_TIMING | string;\n    slideDownCallback?: () => void;\n    slideUpCallback?: () => void;\n    isCloneHeader?: boolean;\n    isFullscreenView?: boolean;\n    isHeadroom?: boolean;\n  }\n}\n","import { SlideHeaderModel } from './app.model';\n\nexport class SlideHeader {\n  element: Element;\n  methodType: SlideHeaderModel.METHOD_TYPE = SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN;\n  slideDirection: SlideHeaderModel.SLIDE_TYPE = SlideHeaderModel.SLIDE_TYPE.UP;\n  config: SlideHeaderModel.Option;\n  options: SlideHeaderModel.Option;\n  defaults: SlideHeaderModel.Option;\n\n  constructor(element: string, options: SlideHeaderModel.Option) {\n    this.element = document.querySelector(element);\n    this.options = options;\n    this.defaults = {\n      headerBarHeight: this.element.clientHeight,\n      headerBarWidth: '100%',\n      header2SelectorName: '.cb-header2',\n      zIndex: 9999,\n      boxShadow: 'none',\n      opacity: 1,\n      slidePoint: 0,\n      slideDownDuration: '500ms',\n      slideUpDuration: '500ms',\n      slideDownTiming: SlideHeaderModel.SLIDE_TIMING.EASE,\n      slideUpTiming: SlideHeaderModel.SLIDE_TIMING.EASE,\n      slideDownCallback: () => {},\n      slideUpCallback: () => {},\n      isCloneHeader: false,\n      isFullscreenView: false,\n      isHeadroom: false,\n    };\n  }\n\n  handleScroll(top: number | string, slideType: SlideHeaderModel.SLIDE_TYPE): void {\n    const slideDuration = this.config[`slide${slideType}Duration`];\n    const slideTiming = this.config[`slide${slideType}Timing`];\n\n    let frameId;\n    cancelAnimationFrame(frameId);\n    frameId = requestAnimationFrame(() => {\n      this.element.setAttribute(\n        'style',\n        `\n          transition: transform ${slideDuration} ${slideTiming};\n          transform: translate3d(0, ${top}, 0);\n        `,\n      );\n    });\n\n    this.slideDirection =\n      this.slideDirection === SlideHeaderModel.SLIDE_TYPE.UP\n        ? SlideHeaderModel.SLIDE_TYPE.DOWN\n        : SlideHeaderModel.SLIDE_TYPE.UP;\n  }\n\n  handleTransitionend(slideType: SlideHeaderModel.SLIDE_TYPE, style: string): void {\n    this.config[`slide${slideType}Callback`];\n    //this.element.setAttribute('style', style);\n  }\n\n  runSlideHeader(): void {\n    const top1 =\n      this.methodType === SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN\n        ? 0\n        : `-${this.config.headerBarHeight}px`;\n    const top2 =\n      this.methodType === SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN\n        ? `-${this.config.headerBarHeight}px`\n        : 0;\n    const slideType1 =\n      this.methodType === SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN\n        ? SlideHeaderModel.SLIDE_TYPE.DOWN\n        : SlideHeaderModel.SLIDE_TYPE.UP;\n    const slideType2 =\n      this.methodType === SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN\n        ? SlideHeaderModel.SLIDE_TYPE.UP\n        : SlideHeaderModel.SLIDE_TYPE.DOWN;\n    let startingScrollTop: number = 0; // スライドの開始位置\n    let currentScrollTop: number = 0; // 現在のスクロールの位置\n\n    const style1 = `\n      box-shadow: ${this.config.boxShadow};\n      transition: 'box-shadow .9s linear',\n    `;\n    const style2 = `\n      box-shadow: none;\n    `;\n    const css1 = this.methodType === SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN ? style1 : style2;\n    const css2 = this.methodType === SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN ? style2 : style1;\n\n    window.addEventListener(\n      'scroll',\n      () => {\n        currentScrollTop = window.scrollY;\n\n        if (this.methodType === SlideHeaderModel.METHOD_TYPE.SLIDE_UP && this.config.isHeadroom) {\n          /** Headroom時 */\n          if (currentScrollTop > startingScrollTop && currentScrollTop > this.config.slidePoint) {\n            if (this.slideDirection === SlideHeaderModel.SLIDE_TYPE.UP) {\n              this.handleScroll(top1, slideType1);\n            }\n          } else {\n            if (this.slideDirection === SlideHeaderModel.SLIDE_TYPE.DOWN) {\n              this.handleScroll(top2, slideType2);\n            }\n          }\n          startingScrollTop = currentScrollTop;\n        } else {\n          /** 通常時（Headroomじゃない時） */\n          if (currentScrollTop > this.config.slidePoint) {\n            /** スクロール位置がスライドポイントより大きくなった場合 */\n            if (this.slideDirection === SlideHeaderModel.SLIDE_TYPE.UP) {\n              this.handleScroll(top1, slideType1);\n            }\n          } else {\n            /** スクロール位置がスライドポイントより小さくなった場合 */\n            if (this.slideDirection === SlideHeaderModel.SLIDE_TYPE.DOWN) {\n              this.handleScroll(top2, slideType2);\n            }\n          }\n        }\n      },\n      false,\n    );\n\n    window.addEventListener(\n      'transitionend',\n      () => {\n        if (this.slideDirection === SlideHeaderModel.SLIDE_TYPE.UP) {\n          this.handleTransitionend(slideType1, css1);\n        } else {\n          this.handleTransitionend(slideType2, css2);\n        }\n      },\n      false,\n    );\n  }\n\n  applyStyle(): void {\n    const top =\n      this.methodType === SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN\n        ? `-${this.config.headerBarHeight}px`\n        : 0;\n    this.element.setAttribute(\n      'style',\n      `\n        transform: translate3d(0, ${top}, 0);\n        visibility: 'visible';\n        opacity: ${this.config.opacity};\n        width: ${this.config.headerBarWidth};\n        zIndex: ${this.config.zIndex};\n      `,\n    );\n  }\n\n  cloneHeader(): void {\n    const clonedElement = this.element.cloneNode(true) as HTMLElement;\n    this.element.parentNode.insertBefore(clonedElement, this.element.nextElementSibling);\n    clonedElement.removeAttribute('class');\n    clonedElement.setAttribute('class', 'cb-header1');\n    clonedElement.setAttribute(\n      'style',\n      `\n        'z-index': 10000;\n      `,\n    );\n  }\n\n  changeHeaderHeight(): void {\n    const headerBarHeight: number = this.element.clientHeight;\n    const header2: Element = document.querySelector(this.config.header2SelectorName);\n    const headerHeight: number = headerBarHeight + header2.clientHeight;\n    const windowHeight: number = window.outerHeight;\n    let padding: number = null;\n\n    if (windowHeight > headerHeight) {\n      if (this.config.isCloneHeader) {\n        padding = (windowHeight - headerHeight) / 2;\n      } else {\n        padding = (windowHeight - headerHeight + headerBarHeight) / 2;\n      }\n      this.config.slidePoint = windowHeight;\n      header2.setAttribute(\n        'style',\n        `\n          'padding-top': ${padding}px;\n          'padding-bottom': ${padding}px;\n        `,\n      );\n    } else {\n      if (this.config.isCloneHeader) {\n        this.config.slidePoint = headerHeight;\n      } else {\n        this.config.slidePoint = headerHeight - headerBarHeight;\n      }\n    }\n  }\n\n  init(type?: SlideHeaderModel.METHOD_TYPE): void {\n    if (\n      type &&\n      (type === SlideHeaderModel.METHOD_TYPE.SLIDE_UP ||\n        type === SlideHeaderModel.METHOD_TYPE.SLIDE_DOWN)\n    ) {\n      this.methodType = type;\n    }\n    this.config = Object.assign({}, this.defaults, this.options);\n    if (this.config.isCloneHeader) {\n      this.cloneHeader();\n    }\n    this.applyStyle();\n    if (this.config.isFullscreenView) {\n      this.changeHeaderHeight();\n    }\n    this.runSlideHeader();\n  }\n}\n\ndeclare global {\n  interface Window {\n    SlideHeader: any;\n  }\n}\n\nwindow.SlideHeader = SlideHeader;\n"]}