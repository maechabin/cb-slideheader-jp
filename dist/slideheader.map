{"version":3,"sources":["app.model.ts","app.ts"],"names":[],"mappings":"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","file":"slideheader.map","sourceRoot":"../src","sourcesContent":["export enum SLIDE_TYPE {\n  UP = 'Up',\n  DOWN = 'Down',\n}\n\nexport enum METHOD_TYPE {\n  SLIDE_DOWN = 'slideDown',\n  SLIDE_UP = 'slideUp',\n}\n\nexport enum SLIDE_TIMING {\n  EASE = 'ease',\n  LINEAR = 'linear',\n  EASE_IN = 'ease-in',\n  EASE_OUT = 'ease-out',\n  EASE_IN_OUT = 'ease-in-out',\n}\n\nexport interface Option {\n  headerBarHeight?: number;\n  headerBarWidth?: string;\n  header2SelectorName?: string;\n  zIndex?: number;\n  boxShadow?: string;\n  opacity?: number;\n  slidePoint?: number;\n  slideDownDuration: string;\n  slideUpDuration: string;\n  slideDownTiming?: SLIDE_TIMING | string;\n  slideUpTiming?: SLIDE_TIMING | string;\n  slideDownCallback?: () => any;\n  slideUpCallback?: () => any;\n  isCloneHeader?: boolean;\n  isFullscreenView?: boolean;\n  isHeadroom?: boolean;\n}","import { Option, SLIDE_TYPE, METHOD_TYPE, SLIDE_TIMING } from './app.model';\n\nexport class SlideHeader {\n  element: Element;\n  methodType: METHOD_TYPE = METHOD_TYPE.SLIDE_DOWN;\n  slideDirection: SLIDE_TYPE = SLIDE_TYPE.UP;\n  config: Option;\n  options: Option;\n  defaults: Option;\n\n  constructor(element: string, options: Option) {\n    this.element = document.querySelector(element);\n    this.options = options;\n    this.defaults = {\n      headerBarHeight: this.element.clientHeight,\n      headerBarWidth: '100%',\n      header2SelectorName: '.cb-header2',\n      zIndex: 9999,\n      boxShadow: 'none',\n      opacity: 1,\n      slidePoint: 0,\n      slideDownDuration: '500ms',\n      slideUpDuration: '500ms',\n      slideDownTiming: SLIDE_TIMING.EASE,\n      slideUpTiming: SLIDE_TIMING.EASE,\n      slideDownCallback: () => {},\n      slideUpCallback: () => {},\n      isCloneHeader: false,\n      isFullscreenView: false,\n      isHeadroom: false,\n    };\n  }\n\n  handleScroll(top: number | string, slideType: SLIDE_TYPE): void {\n    const slideDuration = this.config[`slide${slideType}Duration`];\n    const slideTiming = this.config[`slide${slideType}Timing`];\n\n    let frameId;\n    cancelAnimationFrame(frameId);\n    frameId = requestAnimationFrame(() => {\n      this.element.setAttribute('style', `\n        transition: transform ${slideDuration} ${slideTiming};\n        transform: translate3d(0, ${top}, 0);\n      `);\n    });\n\n    this.slideDirection = (this.slideDirection === SLIDE_TYPE.UP) ? SLIDE_TYPE.DOWN : SLIDE_TYPE.UP;\n  }\n\n  handleTransitionend(slideType: SLIDE_TYPE, style: string): void {\n    this.config[`slide${slideType}Callback`];\n    //this.element.setAttribute('style', style);\n  }\n\n  runSlideHeader(): void {\n    const top1 = (this.methodType === METHOD_TYPE.SLIDE_DOWN) ? 0 : `-${this.config.headerBarHeight}px`;\n    const top2 = (this.methodType === METHOD_TYPE.SLIDE_DOWN) ? `-${this.config.headerBarHeight}px` : 0;\n    const slideType1 = (this.methodType === METHOD_TYPE.SLIDE_DOWN) ? SLIDE_TYPE.DOWN : SLIDE_TYPE.UP;\n    const slideType2 = (this.methodType === METHOD_TYPE.SLIDE_DOWN) ? SLIDE_TYPE.UP : SLIDE_TYPE.DOWN;\n    let startingScrollTop: number = 0; // スライドの開始位置\n    let currentScrollTop: number = 0; // 現在のスクロールの位置\n\n    const style1 = `\n      box-shadow: ${this.config.boxShadow};\n      transition: 'box-shadow .9s linear',\n    `;\n    const style2 = `\n      box-shadow: none;\n    `;\n    const css1 = (this.methodType === METHOD_TYPE.SLIDE_DOWN) ? style1 : style2;\n    const css2 = (this.methodType === METHOD_TYPE.SLIDE_DOWN) ? style2 : style1;\n\n    window.addEventListener('scroll', () => {\n      currentScrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\n      if (this.methodType === METHOD_TYPE.SLIDE_UP && this.config.isHeadroom) {\n        /** Headroom時 */\n        if (currentScrollTop > startingScrollTop　&& currentScrollTop > this.config.slidePoint) {\n          if (this.slideDirection === SLIDE_TYPE.UP) {\n            this.handleScroll(top1, slideType1);\n          }\n        } else {\n          if (this.slideDirection === SLIDE_TYPE.DOWN) {\n            this.handleScroll(top2, slideType2);\n          }\n        }\n        startingScrollTop = currentScrollTop;\n      } else {\n        /** 通常時（Headroomじゃない時） */\n        if (currentScrollTop > this.config.slidePoint) {\n          /** スクロール位置がスライドポイントより大きくなった場合 */\n          if (this.slideDirection === SLIDE_TYPE.UP) {\n            this.handleScroll(top1, slideType1);\n          }\n        } else {\n          /** スクロール位置がスライドポイントより小さくなった場合 */\n          if (this.slideDirection === SLIDE_TYPE.DOWN) {\n            this.handleScroll(top2, slideType2);\n          }\n        }\n      }\n    }, false);\n\n    window.addEventListener('transitionend', () => {\n      if (this.slideDirection === SLIDE_TYPE.UP) {\n        this.handleTransitionend(slideType1, css1);\n      } else {\n        this.handleTransitionend(slideType2, css2);\n      }\n    }, false);\n  }\n\n  applyStyle(): void {\n    const top = (this.methodType === METHOD_TYPE.SLIDE_DOWN) ? `-${this.config.headerBarHeight}px` : 0;\n    this.element.setAttribute('style', `\n      transform: translate3d(0, ${top}, 0);\n      visibility: 'visible';\n      opacity: ${this.config.opacity};\n      width: ${this.config.headerBarWidth};\n      zIndex: ${this.config.zIndex};\n    `);\n  }\n\n  cloneHeader(): void {\n    const clonedElement = this.element.cloneNode(true) as HTMLElement;\n    this.element.parentNode.insertBefore(clonedElement, this.element.nextElementSibling);\n    clonedElement.removeAttribute('class');\n    clonedElement.setAttribute('class', 'cb-header1');\n    clonedElement.setAttribute('style', `\n      'z-index': 10000;\n    `);\n  }\n\n  changeHeaderHeight(): void {\n    const headerBarHeight: number = this.element.clientHeight;\n    const header2: Element = document.querySelector(this.config.header2SelectorName);\n    const headerHeight: number = headerBarHeight + header2.clientHeight;\n    const windowHeight: number = window.outerHeight;\n    let padding: number = null;\n\n    if (windowHeight > headerHeight) {\n      if (this.config.isCloneHeader) {\n        padding = (windowHeight - headerHeight) / 2;\n      } else {\n        padding = (windowHeight - headerHeight + headerBarHeight) / 2;\n      }\n      this.config.slidePoint = windowHeight;\n      header2.setAttribute('style', `\n        'padding-top': ${padding}px;\n        'padding-bottom': ${padding}px;\n      `);\n    } else {\n      if (this.config.isCloneHeader) {\n        this.config.slidePoint = headerHeight;\n      } else {\n        this.config.slidePoint = headerHeight - headerBarHeight;\n      }\n    }\n  }\n\n  init(type?: METHOD_TYPE): void {\n    if (type && (type in METHOD_TYPE)) {\n      this.methodType = type;\n    }\n    this.config = Object.assign({}, this.defaults, this.options);\n    if (this.config.isCloneHeader) {\n      this.cloneHeader();\n    }\n    this.applyStyle();\n    if (this.config.isFullscreenView) {\n      this.changeHeaderHeight();\n    }\n    this.runSlideHeader();\n  }\n}\n/*\ndeclare global {\n  interface Window {\n    SlideHeader: any;\n  }\n}\n\nwindow.SlideHeader = SlideHeader;\n*/\n"]}